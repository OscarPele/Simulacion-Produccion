services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports: ["5433:5432"]

  ms-auth:
    profiles: ["auth"]
    build:
      context: .                       # ra√≠z del repo
      dockerfile: services/ms-auth/Dockerfile
    image: ms-auth:dev
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    read_only: true
    tmpfs: [/tmp]
    volumes:
      - ./services/ms-auth/secrets/private.pem:/run/secrets/jwt_private.pem:ro
      - ./services/ms-auth/secrets/public.pem:/run/secrets/jwt_public.pem:ro
    environment:
      TZ: ${TZ}
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS: always
      JAVA_TOOL_OPTIONS: "-XX:MaxRAMPercentage=75"
      APP_JWT_PRIVATE_KEY_LOCATION: file:/run/secrets/jwt_private.pem
      APP_JWT_PUBLIC_KEY_LOCATION:  file:/run/secrets/jwt_public.pem
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
    ports: ["8081:8081"]

volumes:
  pgdata:
